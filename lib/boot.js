// Generated by CoffeeScript 1.7.1
var express, fs;

express = require('express');

fs = require('fs');

module.exports.Boot = function(parent, options) {
  var verbose;
  verbose = options.verbose;
  return fs.readdirSync("" + __dirname + "/../routes").forEach(function(name) {
    var app, key, method, obj, path, prefix;
    if (name.match(/^\./)) {
      return;
    }
    verbose && console.log("\n   " + name + ":");
    obj = require("./../routes/" + name);
    name = obj.name || name;
    prefix = obj.prefix || '';
    app = express();
    if (obj.engine) {
      app.set('view engine', 'jade');
    }
    app.set('views', "" + __dirname + "/../views/" + name + "/");
    if (obj.before) {
      path = "/" + name + "/:" + name + "_id";
      app.all(path, obj.before);
      verbose && console.log('     ALL %s -> before', path);
      path = "/" + name + "/:" + name + "_id/*";
      app.all(path, obj.before);
      verbose && console.log('     ALL %s -> before', path);
    }
    for (key in obj) {
      if (~['name', 'prefix', 'engine', 'before'].indexOf(key)) {
        continue;
      }
      switch (key) {
        case 'show':
          method = 'get';
          path = "/" + name + "/:" + name + "_id";
          break;
        case 'list':
          method = 'get';
          path = "/" + name + "s";
          break;
        case 'edit':
          method = 'get';
          path = "/" + name + "/:" + name + "_id/edit";
          break;
        case 'update':
          method = 'put';
          path = "/" + name + "/:" + name + "_id";
          break;
        case 'create':
          method = 'post';
          path = "/" + name;
          break;
        case 'destroy':
          method = 'delete';
          path = "/" + name + "/:" + name + "_id";
          break;
        case 'index':
          method = 'get';
          path = '/';
          break;
        default:
          throw new Error("unrecognized route: " + name + "." + key);
      }
      path = prefix + path;
      app[method](path, obj[key]);
      verbose && console.log("" + (method.toUpperCase()) + " " + path + " -> " + key);
    }
    return parent.use(app);
  });
};
